{"version":3,"sources":["landingPage/LandingPage.module.css","deviceSelect/DeviceSelect.module.css","locationPrompt/LocationPrompt.module.css","header/Header.module.css","serviceWorkerRegistration.ts","reportWebVitals.ts","state/clientState/ClientActions.ts","state/utils/createActionCreator.ts","state/utils/createStateSelectors.ts","state/clientState/ClientSelectors.ts","landingPage/LandingPage.tsx","utils/noop.ts","deviceSelect/DeviceSelect.tsx","locationPrompt/LocationPrompt.tsx","state/playerState/PlayerActions.ts","state/playerState/PlayerSelectors.ts","player/Player.tsx","homePage/HomePage.tsx","redirectPage/RedirectPage.tsx","utils/isValidAuthResponse.ts","utils/extractHashValues.ts","header/Header.tsx","errorBoundary/ErrorBoundary.tsx","App.tsx","theme.ts","state/clientState/ClientState.ts","state/playerState/PlayerState.ts","utils/request.ts","state/utils/ofType.ts","state/clientState/epics/requestLocation.ts","utils/getCurrentHour.ts","state/clientState/epics/queueMoreSongs.ts","state/rootEpic.ts","state/clientState/epics/fetchClientMetadata.ts","state/clientState/epics/fetchDevices.ts","state/clientState/epics/redirectToAuth.ts","utils/redirect.ts","utils/getUserLocation.ts","state/clientState/epics/startQueueingSongs.ts","state/playerState/epics/setPlayerStatus.ts","state/mainStore.ts","state/playerState/playerReducer.ts","state/clientState/clientReducer.ts","index.tsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ClientActionType","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createAction","type","payload","ClientActions","createStateSelectors","stateProp","createPropSelector","prop","getStartedClicked","GetStartedClicked","devicesFetched","DevicesFetched","deviceSelected","DeviceSelected","locationApproved","LocationApproved","locationDenied","LocationDenied","clientIdRequested","ClientIdRequested","clientIdRequestSucceeded","ClientIdRequestSucceeded","clientIdRequestFailed","ClientIdRequestFailed","clientAuthorized","ClientAuthorized","startPlayback","StartPlayback","queueRequestSucceeded","QueueRequestSucceeded","queueRequestFailed","QueueRequestFailed","queueSongs","QueueMoreSongs","songFinished","SongFinished","ClientSelectors","getAuth","getClientId","isFetchingClientId","getDevices","getSelectedDeviceId","getLocation","hasStartedPlayback","songLengths","isQueuingSongs","isLoggedIn","createSelector","auth","Date","now","timestamp","expiresIn","hasSelectedDevice","devices","selectedDeviceId","some","device","id","hasLocation","currSongLength","lengths","LandingPage","dispatch","useDispatch","useSelector","className","width","height","p","direction","flexFlow","spacing","size","sx","fontSize","textAlign","styles","tagLine","alignItems","pr","padding","pl","aria-label","onClick","rightIcon","ArrowForward","isLoading","noop","DeviceSelect","isOpen","isCentered","onClose","overlay","m","length","align","map","isFullWidth","name","LocationPrompt","thickness","speed","PlayerActionType","PlayerActions","openPlayer","OpenPlayer","closePlayer","ClosePlayer","playClicked","PlayClicked","pauseClicked","PauseClicked","likeSongClicked","LikeSongClicked","nextSongClicked","NextSongClicked","previousSongClicked","PreviousSongClicked","playbackStarted","PlaybackStarted","playerStatusUpdateSucceeded","PlayerStatusUpdateSucceeded","playerStatusUpdateFailed","PlayerStatusUpdateFailed","PlayerSelectors","Player","children","isPlaying","flex","overflow","in","animateOpacity","unmountOnExit","margin","as","FaHeart","FaStepBackward","FaPause","FaPlay","FaStepForward","HomePage","isPlayerOpen","useEffect","setTimeout","RedirectPage","history","useHistory","hash","response","hashValues","substring","split","hashPart","reduce","result","key","value","access_token","push","Number","expires_in","accessToken","tokenType","token_type","Header","bg","header","ErrorBoundary","hasError","this","props","React","Component","App","basename","path","component","theme","extendTheme","initialColorMode","components","Heading","baseStyle","fontWeight","defaultClientState","totalLength","defaultPlayerState","Method","request","url","options","apiUrl","prod","fetch","undefined","body","JSON","stringify","mode","headers","a","ok","json","Error","statusText","ofType","actions$","pipe","filter","action","includes","getCurrentHour","getHours","getMinutes","rootEpic","combineEpics","action$","switchMap","metadata","clientId","catchError","of","tap","params","paramString","Object","entries","Array","isArray","encodeURIComponent","join","String","href","redirect","client_id","redirect_uri","origin","response_type","scope","EMPTY","Promise","res","rej","geolocation","getCurrentPosition","lat","coords","latitude","lon","longitude","state$","withLatestFrom","method","Post","client","deviceId","hour","token","PlayerStatus","Start","Pause","Skip","Back","exhaustMap","status","rootReducer","combineReducers","player","shift","slice","epicMiddleware","createEpicMiddleware","mainStore","createStore","applyMiddleware","save","run","ReactDOM","render","StrictMode","store","document","getElementById","URL","process","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.872ea4a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagLine\":\"LandingPage_tagLine__1o3Bc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"DeviceSelect_overlay__1gwlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"LocationPrompt_overlay__2tSHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1eWT5\",\"gradient\":\"Header_gradient__3q6Vw\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Coordinate, QueueResponse, VibeRequest } from '@local/shared';\r\nimport { GetActionsFromClass } from '../typings/GetActionsFromClass';\r\nimport { createActionCreator } from '../utils/createActionCreator';\r\nimport { ClientAuth, ClientDevice } from './ClientState';\r\n\r\nexport enum ClientActionType {\r\n  GetStartedClicked = 'client/get-started-click',\r\n  DevicesFetched = 'client/devices-fetched',\r\n  DeviceSelected = 'client/device-selected',\r\n  LocationApproved = 'client/location-approved',\r\n  LocationDenied = 'client/location-denied',\r\n  ClientIdRequested = 'client/id-requested',\r\n  ClientIdRequestSucceeded = 'client/id-request-succeeded',\r\n  ClientIdRequestFailed = 'client/id-request-failed',\r\n  ClientAuthorized = 'client/authorized',\r\n  StartPlayback = 'player/start-playback',\r\n  QueueRequestSucceeded = 'player/queue-request-succeeded',\r\n  QueueRequestFailed = 'player/queue-request-failed',\r\n  QueueMoreSongs = 'player/queue-more-songs',\r\n  SongFinished = 'player/song-finished',\r\n}\r\n\r\nconst createAction = createActionCreator<ClientActionType>();\r\n\r\nexport class ClientActions {\r\n  static readonly getStartedClicked = createAction()(\r\n    ClientActionType.GetStartedClicked,\r\n  );\r\n\r\n  static readonly devicesFetched = createAction<ClientDevice[]>()(\r\n    ClientActionType.DevicesFetched,\r\n  );\r\n\r\n  static readonly deviceSelected = createAction<string>()(\r\n    ClientActionType.DeviceSelected,\r\n  );\r\n\r\n  static readonly locationApproved = createAction<Coordinate>()(\r\n    ClientActionType.LocationApproved,\r\n  );\r\n\r\n  static readonly locationDenied = createAction()(\r\n    ClientActionType.LocationDenied,\r\n  );\r\n\r\n  static readonly clientIdRequested = createAction()(\r\n    ClientActionType.ClientIdRequested,\r\n  );\r\n\r\n  static readonly clientIdRequestSucceeded = createAction<string>()(\r\n    ClientActionType.ClientIdRequestSucceeded,\r\n  );\r\n\r\n  static readonly clientIdRequestFailed = createAction()(\r\n    ClientActionType.ClientIdRequestFailed,\r\n  );\r\n\r\n  static readonly clientAuthorized = createAction<ClientAuth>()(\r\n    ClientActionType.ClientAuthorized,\r\n  );\r\n  static readonly startPlayback = createAction()(\r\n    ClientActionType.StartPlayback,\r\n  );\r\n  static readonly queueRequestSucceeded = createAction<QueueResponse>()(\r\n    ClientActionType.QueueRequestSucceeded,\r\n  );\r\n  static readonly queueRequestFailed = createAction()(\r\n    ClientActionType.QueueRequestFailed,\r\n  );\r\n  static readonly queueSongs = createAction()(ClientActionType.QueueMoreSongs);\r\n  static readonly songFinished = createAction()(ClientActionType.SongFinished);\r\n}\r\n\r\nexport type AllClientActions = GetActionsFromClass<typeof ClientActions>;\r\n\r\nexport type ClientActionOf<T extends ClientActionType> = Extract<\r\n  AllClientActions,\r\n  {\r\n    type: T;\r\n  }\r\n>;\r\n","export function createActionCreator<T>() {\r\n  return <P = void>() => <V extends T>(type: V) => (payload: P) => ({\r\n    type,\r\n    payload,\r\n  });\r\n}\r\n","import { AppState } from '../AppState';\r\n\r\nexport function createStateSelectors<T extends keyof AppState>(stateProp: T) {\r\n  return {\r\n    createPropSelector: <K extends keyof AppState[T]>(prop: K) => (\r\n      state: AppState\r\n    ) => state[stateProp][prop],\r\n  };\r\n}\r\n","import { createStateSelectors } from '../utils/createStateSelectors';\r\nimport { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst { createPropSelector } = createStateSelectors('client');\r\n\r\nexport class ClientSelectors {\r\n  static readonly getAuth = createPropSelector('auth');\r\n  static readonly getClientId = createPropSelector('clientId');\r\n  static readonly isFetchingClientId = createPropSelector('isFetchingClientId');\r\n  static readonly getDevices = createPropSelector('devices');\r\n  static readonly getSelectedDeviceId = createPropSelector('selectedDeviceId');\r\n  static readonly getLocation = createPropSelector('location');\r\n  static readonly hasStartedPlayback = createPropSelector('hasStartedPlayback');\r\n  static readonly songLengths = createPropSelector('songLengths');\r\n  static readonly isQueuingSongs = createPropSelector('isQueuingSongs');\r\n\r\n  static readonly isLoggedIn = createSelector(\r\n    ClientSelectors.getAuth,\r\n    (auth) => auth && Date.now() < auth.timestamp + auth.expiresIn * 1000,\r\n  );\r\n\r\n  static readonly hasSelectedDevice = createSelector(\r\n    ClientSelectors.getDevices,\r\n    ClientSelectors.getSelectedDeviceId,\r\n    (devices, selectedDeviceId) =>\r\n      Boolean(\r\n        selectedDeviceId &&\r\n          devices.some((device) => device.id === selectedDeviceId),\r\n      ),\r\n  );\r\n\r\n  static readonly hasLocation = createSelector(\r\n    ClientSelectors.getLocation,\r\n    (location) => Boolean(location),\r\n  );\r\n\r\n  static readonly currSongLength = createSelector(\r\n    ClientSelectors.songLengths,\r\n    (lengths) => (lengths ? lengths[0] : 0),\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  VStack,\r\n  Text,\r\n  Heading,\r\n} from '@chakra-ui/react';\r\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ClientActions } from '../state/clientState/ClientActions';\r\nimport { ClientSelectors } from '../state/clientState/ClientSelectors';\r\n\r\nimport styles from './LandingPage.module.css';\r\n\r\nexport function LandingPage() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingClientId = useSelector(ClientSelectors.isFetchingClientId);\r\n\r\n  return (\r\n    <Box className=\"Landing\" width=\"100%\" height=\"100%\" p=\"2\">\r\n      <Flex direction=\"column\" height=\"100%\" flexFlow=\"column\">\r\n        <Center height=\"100%\">\r\n          <VStack spacing=\"10\" p=\"2\">\r\n            <Heading\r\n              size=\"xl\"\r\n              sx={{\r\n                '@media (max-width: 800px)': {\r\n                  fontSize: '1.5rem',\r\n                },\r\n              }}\r\n              textAlign=\"left\"\r\n              className={styles.tagLine}\r\n            >\r\n              <VStack spacing=\"4\" alignItems=\"start\">\r\n                <Text\r\n                  pr=\"6\"\r\n                  sx={{\r\n                    '@media (max-width: 800px)': {\r\n                      padding: 0,\r\n                    },\r\n                  }}\r\n                >\r\n                  A musical odyssey.\r\n                </Text>\r\n                <Text\r\n                  pl=\"6\"\r\n                  sx={{\r\n                    '@media (max-width: 800px)': {\r\n                      padding: 0,\r\n                    },\r\n                  }}\r\n                >\r\n                  Guided by your surroundings.\r\n                </Text>\r\n              </VStack>\r\n            </Heading>\r\n            <Button\r\n              aria-label=\"Get Started\"\r\n              onClick={() => dispatch(ClientActions.getStartedClicked())}\r\n              rightIcon={<ArrowForwardIcon />}\r\n              isLoading={isFetchingClientId}\r\n            >\r\n              Get Started\r\n            </Button>\r\n          </VStack>\r\n        </Center>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n","export function noop(): void {}\r\n","import {\r\n  Text,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ClientActions } from '../state/clientState/ClientActions';\r\nimport { ClientSelectors } from '../state/clientState/ClientSelectors';\r\nimport { noop } from '../utils/noop';\r\n\r\nimport styles from './DeviceSelect.module.css';\r\n\r\nexport interface DeviceSelectProps {\r\n  isOpen: boolean;\r\n}\r\n\r\nexport function DeviceSelect({ isOpen }: DeviceSelectProps) {\r\n  const devices = useSelector(ClientSelectors.getDevices);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} isCentered size=\"lg\" onClose={noop}>\r\n      <ModalOverlay className={styles.overlay} />\r\n      <ModalContent m=\"2\">\r\n        <ModalHeader textAlign=\"center\">Select a device</ModalHeader>\r\n        <ModalBody>\r\n          <List spacing=\"3\">\r\n            {!devices.length && <Text align=\"center\">No devices found</Text>}\r\n            {devices.map((device) => (\r\n              <ListItem key={device.id}>\r\n                <Button\r\n                  isFullWidth\r\n                  onClick={() =>\r\n                    dispatch(ClientActions.deviceSelected(device.id))\r\n                  }\r\n                >\r\n                  {device.name}\r\n                </Button>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </ModalBody>\r\n        <ModalFooter />\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  Text,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Spinner,\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { noop } from '../utils/noop';\r\n\r\nimport styles from './LocationPrompt.module.css';\r\n\r\nexport interface LocationPromptProps {\r\n  isOpen: boolean;\r\n}\r\n\r\nexport function LocationPrompt({ isOpen }: LocationPromptProps) {\r\n  return (\r\n    <Modal isOpen={isOpen} isCentered size=\"md\" onClose={noop}>\r\n      <ModalOverlay className={styles.overlay} />\r\n      <ModalContent m=\"2\">\r\n        <ModalHeader textAlign=\"center\">Waiting for a GPS signal</ModalHeader>\r\n        <ModalBody textAlign=\"center\">\r\n          <Spinner thickness=\"4px\" speed=\"0.65s\" size=\"xl\" />\r\n        </ModalBody>\r\n        <ModalFooter />\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import { GetActionsFromClass } from '../typings/GetActionsFromClass';\r\nimport { createActionCreator } from '../utils/createActionCreator';\r\n\r\nexport enum PlayerActionType {\r\n  OpenPlayer = 'player/open',\r\n  ClosePlayer = 'player/close',\r\n  PlayClicked = 'player/play-clicked',\r\n  PauseClicked = 'player/pause-clicked',\r\n  LikeSongClicked = 'player/like-song-clicked',\r\n  NextSongClicked = 'player/next-song-clicked',\r\n  PreviousSongClicked = 'player/previous-song-clicked',\r\n  PlaybackStarted = 'player/playback-started',\r\n  PlayerStatusUpdateSucceeded = 'player/player-status-update-succeeded',\r\n  PlayerStatusUpdateFailed = 'player/player-status-update-failed',\r\n}\r\n\r\nconst createAction = createActionCreator<PlayerActionType>();\r\n\r\nexport class PlayerActions {\r\n  static readonly openPlayer = createAction()(PlayerActionType.OpenPlayer);\r\n  static readonly closePlayer = createAction()(PlayerActionType.ClosePlayer);\r\n  static readonly playClicked = createAction()(PlayerActionType.PlayClicked);\r\n  static readonly pauseClicked = createAction()(PlayerActionType.PauseClicked);\r\n  static readonly likeSongClicked = createAction()(\r\n    PlayerActionType.LikeSongClicked,\r\n  );\r\n  static readonly nextSongClicked = createAction()(\r\n    PlayerActionType.NextSongClicked,\r\n  );\r\n  static readonly previousSongClicked = createAction()(\r\n    PlayerActionType.PreviousSongClicked,\r\n  );\r\n  static readonly playbackStarted = createAction()(\r\n    PlayerActionType.PlaybackStarted,\r\n  );\r\n  static readonly playerStatusUpdateSucceeded = createAction()(\r\n    PlayerActionType.PlayerStatusUpdateSucceeded,\r\n  );\r\n  static readonly playerStatusUpdateFailed = createAction()(\r\n    PlayerActionType.PlayerStatusUpdateFailed,\r\n  );\r\n}\r\n\r\nexport type AllPlayerActions = GetActionsFromClass<typeof PlayerActions>;\r\n","import { createStateSelectors } from '../utils/createStateSelectors';\r\n\r\nconst { createPropSelector } = createStateSelectors('player');\r\n\r\nexport class PlayerSelectors {\r\n  static readonly isOpen = createPropSelector('isOpen');\r\n  static readonly isPlaying = createPropSelector('isPlaying');\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Collapse,\r\n  Divider,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  IconButton,\r\n} from '@chakra-ui/react';\r\nimport React, { ReactNode } from 'react';\r\nimport {\r\n  FaHeart,\r\n  FaPause,\r\n  FaPlay,\r\n  FaStepBackward,\r\n  FaStepForward,\r\n} from 'react-icons/fa';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PlayerActions } from '../state/playerState/PlayerActions';\r\nimport { PlayerSelectors } from '../state/playerState/PlayerSelectors';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function Player({ children }: Props) {\r\n  const isOpen = useSelector(PlayerSelectors.isOpen);\r\n  const isPlaying = useSelector(PlayerSelectors.isPlaying);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box className=\"Player\" width=\"100%\" height=\"100%\">\r\n      <Flex direction=\"column\" height=\"100%\" flexFlow=\"column\">\r\n        <Box flex=\"1\" overflow=\"scroll\">\r\n          {children}\r\n        </Box>\r\n        <Collapse in={isOpen} animateOpacity unmountOnExit>\r\n          <Divider />\r\n          <Center height=\"48px\" margin=\"24px\">\r\n            <HStack spacing=\"24px\">\r\n              <IconButton\r\n                aria-label=\"Like Song\"\r\n                onClick={() => dispatch(PlayerActions.likeSongClicked())}\r\n              >\r\n                <Icon as={FaHeart} />\r\n              </IconButton>\r\n              <IconButton\r\n                aria-label=\"Previous\"\r\n                onClick={() => dispatch(PlayerActions.previousSongClicked())}\r\n              >\r\n                <Icon as={FaStepBackward} />\r\n              </IconButton>\r\n              {isPlaying ? (\r\n                <IconButton\r\n                  aria-label=\"Pause\"\r\n                  onClick={() => dispatch(PlayerActions.pauseClicked())}\r\n                >\r\n                  <Icon as={FaPause} />\r\n                </IconButton>\r\n              ) : (\r\n                <IconButton\r\n                  aria-label=\"Play\"\r\n                  onClick={() => dispatch(PlayerActions.playClicked())}\r\n                >\r\n                  <Icon as={FaPlay} />\r\n                </IconButton>\r\n              )}\r\n              <IconButton\r\n                aria-label=\"Next Song\"\r\n                onClick={() => dispatch(PlayerActions.nextSongClicked())}\r\n              >\r\n                <Icon as={FaStepForward} />\r\n              </IconButton>\r\n              <Button aria-label=\"Up Next\">Up Next</Button>\r\n            </HStack>\r\n          </Center>\r\n        </Collapse>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button } from '@chakra-ui/react';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DeviceSelect } from '../deviceSelect/DeviceSelect';\r\nimport { LocationPrompt } from '../locationPrompt/LocationPrompt';\r\nimport { Player } from '../player/Player';\r\nimport { ClientActions } from '../state/clientState/ClientActions';\r\nimport { ClientSelectors } from '../state/clientState/ClientSelectors';\r\nimport { PlayerActions } from '../state/playerState/PlayerActions';\r\nimport { PlayerSelectors } from '../state/playerState/PlayerSelectors';\r\nimport { getCurrentHour } from '../utils/getCurrentHour';\r\nimport { Method, request } from '../utils/request';\r\n\r\nexport function HomePage() {\r\n  const isPlayerOpen = useSelector(PlayerSelectors.isOpen);\r\n  const location = useSelector(ClientSelectors.getLocation);\r\n  const auth = useSelector(ClientSelectors.getAuth);\r\n  const hasSelectedDevice = useSelector(ClientSelectors.hasSelectedDevice);\r\n  const hasLocation = useSelector(ClientSelectors.hasLocation);\r\n  const deviceId = useSelector(ClientSelectors.getSelectedDeviceId);\r\n  const hasStartedPlayback = useSelector(ClientSelectors.hasStartedPlayback);\r\n  const songLengths = useSelector(ClientSelectors.songLengths);\r\n  const currSongLength = useSelector(ClientSelectors.currSongLength);\r\n  const isQueuingSongs = useSelector(ClientSelectors.isQueuingSongs);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isPlayerOpen) {\r\n      dispatch(PlayerActions.openPlayer());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!isQueuingSongs && !hasStartedPlayback && hasSelectedDevice) {\r\n      dispatch(ClientActions.startPlayback());\r\n    }\r\n  }, [isQueuingSongs, hasStartedPlayback, hasSelectedDevice, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (songLengths.length <= 3 && hasStartedPlayback && !isQueuingSongs) {\r\n      dispatch(ClientActions.queueSongs());\r\n    }\r\n  }, [songLengths, hasStartedPlayback, isQueuingSongs, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (hasStartedPlayback) {\r\n      setTimeout(() => {\r\n        dispatch(ClientActions.songFinished());\r\n      }, currSongLength);\r\n    }\r\n  }, [hasStartedPlayback, currSongLength, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (hasStartedPlayback) {\r\n      dispatch(PlayerActions.playbackStarted());\r\n    }\r\n  }, [hasStartedPlayback, dispatch]);\r\n\r\n  return (\r\n    <Player>\r\n      <DeviceSelect isOpen={!hasSelectedDevice} />\r\n      <LocationPrompt isOpen={hasSelectedDevice && !hasLocation} />\r\n      <Box className=\"Home\" width=\"100%\" height=\"100%\" p=\"4\"></Box>\r\n    </Player>\r\n  );\r\n}\r\n","import { Box } from '@chakra-ui/react';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { RouteProps, useHistory } from 'react-router-dom';\r\nimport { ClientActions } from '../state/clientState/ClientActions';\r\nimport { extractHashValues } from '../utils/extractHashValues';\r\nimport { isValidAuthResponse } from '../utils/isValidAuthResponse';\r\n\r\nexport function RedirectPage({ location }: RouteProps) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!location?.hash) {\r\n      return;\r\n    }\r\n\r\n    const hashValues = extractHashValues(location.hash);\r\n\r\n    if (isValidAuthResponse(hashValues)) {\r\n      history.push('/');\r\n\r\n      dispatch(\r\n        ClientActions.clientAuthorized({\r\n          expiresIn: Number(hashValues.expires_in),\r\n          accessToken: hashValues.access_token,\r\n          tokenType: hashValues.token_type,\r\n          timestamp: Date.now(),\r\n        })\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return <Box width=\"100%\" height=\"100%\" p=\"2\" />;\r\n}\r\n","export function isValidAuthResponse(\r\n  response: any\r\n): response is {\r\n  access_token: string;\r\n  expires_in: string;\r\n  token_type: string;\r\n  state: string;\r\n} {\r\n  return response != null && typeof response.access_token === 'string';\r\n}\r\n","export function extractHashValues<\r\n  T extends Record<string, string> = Record<string, string>\r\n>(hash: string): T {\r\n  return hash\r\n    .substring(1)\r\n    .split('&')\r\n    .map((hashPart) => hashPart.split('='))\r\n    .reduce(\r\n      (result, [key, value]) => ({\r\n        ...result,\r\n        [key]: value,\r\n      }),\r\n      {} as T\r\n    );\r\n}\r\n","import { Box, Heading } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nimport styles from './Header.module.css';\r\n\r\nexport function Header() {\r\n  return (\r\n    <Box p=\"3\" width=\"100%\" bg=\"gray.900\">\r\n      <Heading className={styles.header} as=\"h1\" size=\"4xl\">\r\n        vibe\r\n      </Heading>\r\n    </Box>\r\n  );\r\n}\r\n","import { Heading, VStack, Text } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n  public state = {\r\n    hasError: false,\r\n  };\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <VStack>\r\n          <Heading>\r\n            <Text align=\"center\">Something went wrong</Text>\r\n          </Heading>\r\n          <Text align=\"center\">\r\n            An error occurred, please refresh the page.\r\n          </Text>\r\n        </VStack>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import './App.css';\r\nimport { Box, VStack } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, RouteProps, Switch } from 'react-router-dom';\r\nimport { LandingPage } from './landingPage/LandingPage';\r\nimport { HomePage } from './homePage/HomePage';\r\nimport { RedirectPage } from './redirectPage/RedirectPage';\r\nimport { Header } from './header/Header';\r\nimport { useSelector } from 'react-redux';\r\nimport { ClientSelectors } from './state/clientState/ClientSelectors';\r\nimport { ErrorBoundary } from './errorBoundary/ErrorBoundary';\r\n\r\nexport function App() {\r\n  const isLoggedIn = useSelector(ClientSelectors.isLoggedIn);\r\n\r\n  return (\r\n    <Box className=\"App\" width=\"100%\" height=\"100%\">\r\n      <VStack height=\"100%\">\r\n        <Header />\r\n        <ErrorBoundary>\r\n          <BrowserRouter basename=\"/vibe\">\r\n            <Switch>\r\n              <Route path=\"/redirect\" component={RedirectPage} />\r\n              <Route path=\"/\">\r\n                {isLoggedIn ? <HomePage /> : <LandingPage />}\r\n              </Route>\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </ErrorBoundary>\r\n      </VStack>\r\n    </Box>\r\n  );\r\n}\r\n","import { extendTheme } from '@chakra-ui/react';\r\n\r\nexport const theme = extendTheme({\r\n  config: {\r\n    initialColorMode: 'dark',\r\n  },\r\n  components: {\r\n    Heading: {\r\n      baseStyle: {\r\n        fontWeight: 'bolder',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { Coordinate } from '@local/shared';\r\n\r\nexport interface ClientAuth {\r\n  accessToken: string;\r\n  tokenType: string;\r\n  expiresIn: number;\r\n  timestamp: number;\r\n}\r\n\r\nexport interface ClientDevice {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface ClientState {\r\n  auth?: ClientAuth;\r\n  isFetchingClientId: boolean;\r\n  clientId?: string;\r\n  devices: ClientDevice[];\r\n  selectedDeviceId: string | null;\r\n  location: Coordinate | null;\r\n  hasStartedPlayback: boolean;\r\n  songLengths: number[];\r\n  totalLength: number;\r\n  isQueuingSongs: boolean;\r\n}\r\n\r\nexport const defaultClientState: ClientState = {\r\n  isFetchingClientId: false,\r\n  selectedDeviceId: null,\r\n  devices: [],\r\n  location: null,\r\n  hasStartedPlayback: false,\r\n  songLengths: [],\r\n  totalLength: 0,\r\n  isQueuingSongs: false,\r\n};\r\n","export interface PlayerState {\r\n  isOpen: boolean;\r\n  isPlaying: boolean;\r\n}\r\n\r\nexport const defaultPlayerState: PlayerState = {\r\n  isOpen: false,\r\n  isPlaying: false,\r\n};\r\n","import * as config from '../config.json';\r\n\r\nexport enum Method {\r\n  Get = 'GET',\r\n  Post = 'POST',\r\n  Put = 'PUT',\r\n  Delete = 'DELETE',\r\n}\r\n\r\nexport type RequestOptions = Omit<\r\n  NonNullable<Parameters<typeof fetch>[1]>,\r\n  'body'\r\n> & { body: Record<string, any> };\r\n\r\nexport function request<T = any>(\r\n  url: string,\r\n  options?: RequestOptions,\r\n): Promise<T> {\r\n  const apiUrl =\r\n    process.env.NODE_ENV === 'development'\r\n      ? `${config.api.local}${url}`\r\n      : `${config.api.prod}${url}`;\r\n\r\n  return fetch(\r\n    apiUrl,\r\n    options\r\n      ? ({\r\n          ...options,\r\n          ...(options.body !== undefined && {\r\n            body: JSON.stringify(options.body),\r\n          }),\r\n          mode: 'cors',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        } as any)\r\n      : options,\r\n  ).then(async (response) => {\r\n    if (response.ok) {\r\n      return (await response.json()) as T;\r\n    }\r\n\r\n    throw new Error(response.statusText);\r\n  });\r\n}\r\n","import { Action } from '@reduxjs/toolkit';\r\nimport { Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nexport function ofType<K extends string[]>(\r\n  ...type: K\r\n): <A extends Action>(\r\n  actions$: Observable<A>,\r\n) => Observable<A & Action<K[number]>> {\r\n  return (actions$) =>\r\n    actions$.pipe(filter((action) => type.includes(action.type)));\r\n}\r\n","import { map, switchMap } from 'rxjs/operators';\r\nimport { Epic } from 'redux-observable';\r\nimport {\r\n  AllClientActions,\r\n  ClientActions,\r\n  ClientActionType,\r\n} from '../ClientActions';\r\nimport { ofType } from '../../utils/ofType';\r\nimport { getUserLocation } from '../../../utils/getUserLocation';\r\n\r\nexport const requestLocation: Epic<AllClientActions> = (action$) =>\r\n  action$.pipe(\r\n    ofType(ClientActionType.ClientAuthorized),\r\n    switchMap(() => getUserLocation()),\r\n    map(([location, error]) =>\r\n      error\r\n        ? ClientActions.locationDenied()\r\n        : ClientActions.locationApproved({\r\n            lat: location.coords.latitude,\r\n            lon: location.coords.longitude,\r\n          }),\r\n    ),\r\n  );\r\n","export function getCurrentHour(): number {\r\n  const now = new Date();\r\n\r\n  return now.getHours() + now.getMinutes() / 60;\r\n}\r\n","import { Epic } from 'redux-observable';\r\nimport { switchMap, map, withLatestFrom, catchError } from 'rxjs/operators';\r\nimport { Method, request } from '../../../utils/request';\r\nimport { QueueResponse } from '@local/shared';\r\nimport { ofType } from '../../utils/ofType';\r\nimport {\r\n  AllClientActions,\r\n  ClientActions,\r\n  ClientActionType,\r\n} from '../ClientActions';\r\nimport { AppState } from '../../AppState';\r\nimport { getCurrentHour } from '../../../utils/getCurrentHour';\r\nimport { of } from 'rxjs';\r\n\r\nexport const queueMoreSongs: Epic<AllClientActions, any, AppState> = (\r\n  action$,\r\n  state$,\r\n) =>\r\n  action$.pipe(\r\n    ofType(ClientActionType.QueueMoreSongs),\r\n    withLatestFrom(state$),\r\n    switchMap(([action, state]) =>\r\n      request<QueueResponse>('/vibe/queue', {\r\n        method: Method.Post,\r\n        body: {\r\n          location: state.client.location,\r\n          deviceId: state.client.selectedDeviceId,\r\n          hour: getCurrentHour(),\r\n          token: state.client.auth?.accessToken,\r\n        },\r\n      }),\r\n    ),\r\n    map((result) => ClientActions.queueRequestSucceeded(result)),\r\n    catchError(() => of(ClientActions.queueRequestFailed())),\r\n  );\r\n","import { combineEpics, Epic } from 'redux-observable';\r\nimport { fetchClientMetadata } from './clientState/epics/fetchClientMetadata';\r\nimport { fetchDevices } from './clientState/epics/fetchDevices';\r\nimport { redirectToAuth } from './clientState/epics/redirectToAuth';\r\nimport { requestLocation } from './clientState/epics/requestLocation';\r\nimport { queueMoreSongs } from './clientState/epics/queueMoreSongs';\r\nimport { startQueuingSongs } from './clientState/epics/startQueueingSongs';\r\nimport { setPlayerStatus } from './playerState/epics/setPlayerStatus';\r\n\r\nexport const rootEpic: Epic = combineEpics(\r\n  fetchClientMetadata,\r\n  fetchDevices,\r\n  redirectToAuth,\r\n  requestLocation,\r\n  startQueuingSongs,\r\n  queueMoreSongs,\r\n  setPlayerStatus,\r\n);\r\n","import { catchError, map, switchMap } from 'rxjs/operators';\r\nimport { Epic } from 'redux-observable';\r\nimport { SpotifyMetadataResponse } from '@local/shared';\r\nimport {\r\n  AllClientActions,\r\n  ClientActions,\r\n  ClientActionType,\r\n} from '../ClientActions';\r\nimport { request } from '../../../utils/request';\r\nimport { ofType } from '../../utils/ofType';\r\nimport { of } from 'rxjs';\r\n\r\nexport const fetchClientMetadata: Epic<AllClientActions> = (action$) =>\r\n  action$.pipe(\r\n    ofType(ClientActionType.GetStartedClicked),\r\n    switchMap(() => request<SpotifyMetadataResponse>('/spotify/metadata')),\r\n    map((metadata) => {\r\n      if (metadata.clientId) {\r\n        return ClientActions.clientIdRequestSucceeded(metadata.clientId);\r\n      }\r\n\r\n      throw new Error('Missing metadata clientId');\r\n    }),\r\n    catchError(() => of(ClientActions.clientIdRequestFailed())),\r\n  );\r\n","import { catchError, map, switchMap } from 'rxjs/operators';\r\nimport { Epic } from 'redux-observable';\r\nimport { SpotifyDeviceResponse } from '@local/shared';\r\nimport {\r\n  AllClientActions,\r\n  ClientActions,\r\n  ClientActionType,\r\n} from '../ClientActions';\r\nimport { request } from '../../../utils/request';\r\nimport { ofType } from '../../utils/ofType';\r\nimport { of } from 'rxjs';\r\n\r\nexport const fetchDevices: Epic<AllClientActions> = (action$) =>\r\n  action$.pipe(\r\n    ofType(ClientActionType.ClientAuthorized),\r\n    switchMap((action) =>\r\n      request<SpotifyDeviceResponse[]>(\r\n        `/spotify/devices?token=${action.payload.accessToken}`,\r\n      ),\r\n    ),\r\n    catchError(() => of([] as SpotifyDeviceResponse[])),\r\n    map((devices) =>\r\n      ClientActions.devicesFetched(\r\n        devices.map(({ name, id }) => ({\r\n          name,\r\n          id,\r\n        })),\r\n      ),\r\n    ),\r\n  );\r\n","import { EMPTY } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { Epic } from 'redux-observable';\r\nimport * as config from '../../../config.json';\r\nimport { AllClientActions, ClientActionType } from '../ClientActions';\r\nimport { redirect } from '../../../utils/redirect';\r\nimport { ofType } from '../../utils/ofType';\r\n\r\nexport const redirectToAuth: Epic<AllClientActions> = (action$) =>\r\n  action$.pipe(\r\n    ofType(ClientActionType.ClientIdRequestSucceeded),\r\n    tap((action) =>\r\n      redirect(config.auth, {\r\n        client_id: action.payload,\r\n        redirect_uri: `${window.location.origin}/redirect`,\r\n        response_type: 'token',\r\n        scope: [\r\n          'app-remote-control',\r\n          'user-read-playback-state',\r\n          'user-modify-playback-state',\r\n          'user-read-currently-playing',\r\n          'user-read-playback-position',\r\n        ],\r\n      }),\r\n    ),\r\n    switchMap(() => EMPTY),\r\n  );\r\n","type PrimitiveParam = string | number | boolean;\r\n\r\nexport function redirect(\r\n  url: string,\r\n  params: Record<string, PrimitiveParam | PrimitiveParam[]>\r\n) {\r\n  const paramString = Object.entries(params)\r\n    .map(\r\n      ([key, value]) =>\r\n        `${key}=${\r\n          Array.isArray(value)\r\n            ? value.map(encodeURIComponent).join(',')\r\n            : encodeURIComponent(String(value))\r\n        }`\r\n    )\r\n    .join('&');\r\n\r\n  window.location.href = `${url}?${paramString}`;\r\n}\r\n","import { Attempt } from './Attempt';\r\n\r\nexport function getUserLocation(): Promise<Attempt<GeolocationPosition>> {\r\n  return new Promise((res, rej) => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (value) => res([value]),\r\n      (error) => rej([null, error])\r\n    );\r\n  });\r\n}\r\n","import { Epic } from 'redux-observable';\r\nimport { switchMap, map, withLatestFrom, catchError } from 'rxjs/operators';\r\nimport { Method, request } from '../../../utils/request';\r\nimport { QueueResponse } from '@local/shared';\r\nimport { ofType } from '../../utils/ofType';\r\nimport {\r\n  AllClientActions,\r\n  ClientActions,\r\n  ClientActionType,\r\n} from '../ClientActions';\r\nimport { AppState } from '../../AppState';\r\nimport { getCurrentHour } from '../../../utils/getCurrentHour';\r\nimport { of } from 'rxjs';\r\n\r\nexport const startQueuingSongs: Epic<AllClientActions, any, AppState> = (\r\n  action$,\r\n  state$,\r\n) =>\r\n  action$.pipe(\r\n    ofType(ClientActionType.StartPlayback),\r\n    withLatestFrom(state$),\r\n    switchMap(([action, state]) =>\r\n      request<QueueResponse>('/vibe/start', {\r\n        method: Method.Post,\r\n        body: {\r\n          location: state.client.location,\r\n          deviceId: state.client.selectedDeviceId,\r\n          hour: getCurrentHour(),\r\n          token: state.client.auth?.accessToken,\r\n        },\r\n      }),\r\n    ),\r\n    map((result) => ClientActions.queueRequestSucceeded(result)),\r\n    catchError(() => of(ClientActions.queueRequestFailed())),\r\n  );\r\n","import { Epic } from 'redux-observable';\r\nimport { of } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  concatMap,\r\n  exhaustMap,\r\n  map,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\nimport { Method, request } from '../../../utils/request';\r\nimport { AppState } from '../../AppState';\r\nimport { ofType } from '../../utils/ofType';\r\nimport {\r\n  AllPlayerActions,\r\n  PlayerActions,\r\n  PlayerActionType,\r\n} from '../PlayerActions';\r\nimport { PlayerStatus } from '@local/shared';\r\n\r\nexport const setPlayerStatus: Epic<AllPlayerActions, any, AppState> = (\r\n  action$,\r\n  state$,\r\n) =>\r\n  action$.pipe(\r\n    ofType(\r\n      PlayerActionType.PlayClicked,\r\n      PlayerActionType.PauseClicked,\r\n      PlayerActionType.NextSongClicked,\r\n      PlayerActionType.PreviousSongClicked,\r\n    ),\r\n    map((action) => {\r\n      switch (action.type) {\r\n        case PlayerActionType.PlayClicked:\r\n          return PlayerStatus.Start;\r\n        case PlayerActionType.PauseClicked:\r\n          return PlayerStatus.Pause;\r\n        case PlayerActionType.NextSongClicked:\r\n          return PlayerStatus.Skip;\r\n        case PlayerActionType.PreviousSongClicked:\r\n          return PlayerStatus.Back;\r\n        default:\r\n          return PlayerStatus.Start;\r\n      }\r\n    }),\r\n    withLatestFrom(state$),\r\n    exhaustMap(([status, state]) =>\r\n      request('/spotify/status', {\r\n        method: Method.Post,\r\n        body: {\r\n          token: state.client.auth?.accessToken,\r\n          deviceId: state.client.selectedDeviceId,\r\n          status: status,\r\n        },\r\n      }),\r\n    ),\r\n    map(() => PlayerActions.playerStatusUpdateSucceeded()),\r\n    catchError(() => of(PlayerActions.playerStatusUpdateFailed())),\r\n  );\r\n","import { applyMiddleware } from '@reduxjs/toolkit';\r\nimport { createStore, combineReducers } from 'redux';\r\nimport { clientReducer } from './clientState/clientReducer';\r\nimport { playerReducer } from './playerState/playerReducer';\r\nimport { save } from 'redux-localstorage-simple';\r\nimport { applyDevTools } from './utils/applyDevTools';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootEpic } from './rootEpic';\r\n\r\nconst rootReducer = combineReducers({\r\n  player: playerReducer,\r\n  client: clientReducer,\r\n});\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nexport const mainStore = createStore(\r\n  rootReducer,\r\n  applyDevTools(applyMiddleware(epicMiddleware, save())),\r\n);\r\n\r\nepicMiddleware.run(rootEpic);\r\n","import { AllPlayerActions, PlayerActionType } from './PlayerActions';\r\nimport { PlayerState, defaultPlayerState } from './PlayerState';\r\n\r\nexport function playerReducer(\r\n  state: PlayerState = defaultPlayerState,\r\n  action: AllPlayerActions,\r\n): PlayerState {\r\n  switch (action.type) {\r\n    case PlayerActionType.OpenPlayer:\r\n      return { ...state, isOpen: true };\r\n    case PlayerActionType.ClosePlayer:\r\n      return { ...state, isOpen: false };\r\n    case PlayerActionType.PlayClicked:\r\n      return { ...state, isPlaying: true };\r\n    case PlayerActionType.PauseClicked:\r\n      return { ...state, isPlaying: false };\r\n    case PlayerActionType.PlaybackStarted:\r\n      return { ...state, isPlaying: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { AllClientActions, ClientActionType } from './ClientActions';\r\nimport { ClientState, defaultClientState } from './ClientState';\r\n\r\nexport function clientReducer(\r\n  state: ClientState = defaultClientState,\r\n  action: AllClientActions,\r\n): ClientState {\r\n  switch (action.type) {\r\n    case ClientActionType.GetStartedClicked:\r\n      return {\r\n        ...state,\r\n        isFetchingClientId: true,\r\n      };\r\n    case ClientActionType.ClientIdRequestFailed:\r\n      return {\r\n        ...state,\r\n        isFetchingClientId: false,\r\n      };\r\n    case ClientActionType.ClientIdRequestSucceeded:\r\n      return {\r\n        ...state,\r\n        isFetchingClientId: false,\r\n        clientId: action.payload,\r\n      };\r\n    case ClientActionType.DevicesFetched:\r\n      return {\r\n        ...state,\r\n        devices: action.payload,\r\n      };\r\n    case ClientActionType.DeviceSelected:\r\n      return {\r\n        ...state,\r\n        selectedDeviceId: action.payload,\r\n      };\r\n    case ClientActionType.LocationApproved:\r\n      return {\r\n        ...state,\r\n        location: action.payload,\r\n      };\r\n    case ClientActionType.ClientAuthorized:\r\n      const { accessToken, tokenType, expiresIn, timestamp } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        auth: {\r\n          accessToken,\r\n          tokenType,\r\n          expiresIn,\r\n          timestamp,\r\n        },\r\n      };\r\n    case ClientActionType.StartPlayback:\r\n      return {\r\n        ...state,\r\n        isQueuingSongs: true,\r\n      };\r\n    case ClientActionType.QueueMoreSongs:\r\n      return {\r\n        ...state,\r\n        isQueuingSongs: true,\r\n      };\r\n    case ClientActionType.QueueRequestSucceeded:\r\n      return {\r\n        ...state,\r\n        songLengths: action.payload.lengths,\r\n        totalLength: action.payload.totalLength,\r\n        hasStartedPlayback: true,\r\n        isQueuingSongs: false,\r\n      };\r\n    case ClientActionType.SongFinished:\r\n      const length = [...state.songLengths].shift() ?? 0;\r\n      return {\r\n        ...state,\r\n        songLengths: state.songLengths.slice(1),\r\n        totalLength: state.totalLength - length,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\n\r\nimport './index.css';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { App } from './App';\r\nimport { theme } from './theme';\r\nimport { Provider } from 'react-redux';\r\nimport { mainStore } from './state/mainStore';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={mainStore}>\r\n      <ChakraProvider theme={theme}>\r\n        <App />\r\n      </ChakraProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}